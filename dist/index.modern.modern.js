class t extends Error{}var e=Object.freeze({JOI:"joi",AJV:"ajv",SUPERSTRUCT:"superstruct"});class r{constructor({engine:t=e.JOI,strict:r=!1,extend:a={}}={}){return Object.assign(this,{engine:t,strict:r,extend:a}),this.handle.bind(this)}handle(e){var r=this;e.subscribe(async function({type:a,payload:n}){await((e,r)=>{const{extend:a,strict:n,engine:o}=r,{_modules:s,_modulesNamespaceMap:i}=e,c={execute:async({type:r,payload:c})=>{const u=await(e=>{const r=e.split("/"),a=r.pop(),{_rawModule:o}=(t=>{let e=t;return e&&"/"!==t.charAt(t.length-1)&&(e+="/"),i[e]||s.root})(r.join("/")),c=(o.rules||{})[a];if(n&&!c)throw new t("[Strict Mode] Rules are not defined for: "+e);return"function"==typeof c?c:()=>c})(r)(e,c),d=await(async(t,e)=>{const r=t=>t.default||t,a={ajv:()=>import("./ajv-70e862a1.js").then(r),joi:()=>import("./joi-48734459.js").then(r),superstruct:()=>import("./superstruct-628397c6.js").then(r)};if(Object.keys(a).includes(t))return await a[t]();if(e&&Object.keys(e).includes(t))return e[t];throw new Error(`Validation Engine for "${t}" not found.`)})(o,a),l=await d(u,c);if(l)throw new Error(l)},validate:async({type:e,payload:r})=>{try{await c.execute({type:e,payload:r})}catch({message:r}){throw new t(`${r} for mutation: ${e}`)}}};return c})(e,r).validate({type:a,payload:n})})}}window.Vue&&(window.VuexStoreValidator=r);const a=e;export default r;export{a as ENGINE};
//# sourceMappingURL=index.modern.modern.js.map
