import e from"ajv";import{assert as t,any as r}from"superstruct";var o=(t,r)=>{const o=new e({jsonPointers:!0,$data:!0}).compile(t||{});o(r);const{errors:n}=o;return n&&(e=>e.map(e=>e.message).join(", "))(n)},n=(e,t)=>{const r=e||{validate:()=>({})},{error:o}=r.validate(t);return o&&o.message},s=(e,o)=>{let n=null;try{t(o,e||r())}catch({message:e}){n=e}return n};class i extends Error{}var a=Object.freeze({JOI:"joi",AJV:"ajv",SUPERSTRUCT:"superstruct"});class c{constructor({engine:e=a.JOI,strict:t=!1,extend:r={}}={}){return Object.assign(this,{engine:e,strict:t,extend:r}),(({extend:e,strict:t,engine:r})=>a=>{const{_modules:c,_modulesNamespaceMap:u}=a;a.subscribe(({type:d,payload:l})=>{const p=((e,t)=>{const r={ajv:o,joi:n,superstruct:s,...t};if(Object.keys(r).includes(e))return r[e];throw new Error(`Validation Engine for "${e}" not found.`)})(r,e)(((e,r)=>{const o=e.split("/"),n=o.pop(),s=(e=>{let t=e;return t&&"/"!==e.charAt(e.length-1)&&(t+="/"),u[t]})(o.join("/")),{rules:d={}}=(s||c.root)._rawModule,l=d[n];if(t&&!l)throw new i("[Strict Mode] Rules are not defined for: "+e);return"function"==typeof l?l(a,r):l})(d,l),l);if(p)throw new i(`${p} for mutation: ${d}`)})})(this)}}window.Vue&&(window.VuexStoreValidator=c);const u=a;export default c;export{u as ENGINE};
//# sourceMappingURL=index.module.js.map
